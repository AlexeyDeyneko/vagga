containers:

  docs:
    setup:
    - !Ubuntu trusty
    - !Install [python-sphinx, make]

  alpine-docs:
    setup:
    - !Alpine v3.1
    - !Install [alpine-base, py-sphinx, make]

  ubuntu-package:
    setup:
    - !Ubuntu trusty
    - !UbuntuUniverse
    - !TarInstall
      url: http://static.rust-lang.org/dist/rust-1.0.0-alpha-x86_64-unknown-linux-gnu.tar.gz
      script: |
        ./install.sh --prefix=/usr
    - !Remove /usr/lib/rustlib/i686-unknown-linux-gnu
    - !Install [make, checkinstall, git, uidmap, wget]

  test:
    setup:
    - !Ubuntu trusty
    - !UbuntuUniverse
    - !BuildDeps [wget, git, make]
    - !Sh |
        set -ex
        cd /tmp
        git clone git://github.com/sstephenson/bats
        cd bats
        ./install.sh /usr
    - !Depends vagga_launcher
    - !Depends vagga_wrapper
    - !Depends vagga_build
    - !Depends vagga_version
    - !Depends vagga_setup_netns
    - !Depends vagga_network
    - !Depends apk
    - !Depends busybox
    - !Sh make install

commands:

  print-env: !Command
    container: docs
    run: [env]

  docs-bash: !Command
    container: docs
    run: [bash]

  build-docs: !Command
    description: Build vagga documentation
    container: docs
    run: [make]
    work-dir: docs

  build-docs-apline: !Command
    description: Build vagga documentation (by alpine linux)
    container: alpine-docs
    run: [make]
    work-dir: docs

  html-docs: !Command
    description: Build vagga documentation (html version)
    container: docs
    run: make html
    work-dir: docs

  make: !Command
    description: Build vagga
    container: ubuntu-package
    run: [make]

  build-ubuntu-package: !Command
    description: Create an ubuntu (.deb) package using checkinstall in
      container
    container: ubuntu-package
    write-mode: transient-hard-link-copy
    accepts-arguments: true
    run: |
      make all "$@" || exit 1
      checkinstall \
        --default \
        --maintainer=paul@colomiets.name \
        --pkglicense=MIT \
        --pkgname=vagga \
        --pkgver="$(git describe | cut -c2-)" \
        --requires="uidmap" \
        --backup=no \
        --nodoc \
      make install

  test: !Command
    description: Run self tests
    container: test
    accepts-arguments: true
    run: |
      set -ex
      rm -rf tests/*/.vagga
      export HOME=/work/tmp/home
      mkdir -p $HOME /work/tmp/cache || true
      echo "cache-dir: /work/tmp/cache" > $HOME/.vagga.yaml
      if [ -n "$UBUNTU_MIRROR" ]; then
          echo "ubuntu-mirror: $UBUNTU_MIRROR" >> $HOME/.vagga.yaml
      fi
      if [ -n "$*" ]; then
        bats "$@"
      else
        bats tests
      fi


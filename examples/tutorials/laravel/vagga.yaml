containers:
  laravel:
    environ: &env
      ENV_CONTAINER: 1
      APP_ENV: development
      APP_DEBUG: true
      APP_KEY: YourRandomGeneratedEncryptionKey
    setup:
    - !Ubuntu xenial
    - !UbuntuUniverse
    - !Install
      - php-dom
      - php-mbstring
      - php-mysql
      - php-memcached
    - !Env { <<: *env }
    - !ComposerDependencies

  mysql:
    setup:
    - !Ubuntu xenial
    - !UbuntuUniverse

    - !Sh |
        addgroup --system --gid 200 mysql
        adduser --uid 200 --system --home /data --no-create-home \
            --shell /bin/bash --group --gecos "MySQL user" \
            mysql
    - !Install
      - mysql-server-5.7
      - mysql-client-5.7
    - !Remove /var/lib/mysql
    - !EnsureDir /data
    environ: &db_config
      DB_DATABASE: vagga
      DB_USERNAME: vagga
      DB_PASSWORD: vagga
      DB_HOST: 127.0.0.1
      DB_PORT: 3307
      DB_DATA_DIR: /data
    volumes:
      /data: !Persistent
        name: mysql
        owner-uid: 200
        owner-gid: 200
        init-command: _mysql-init
      /run: !Tmpfs
        subdirs:
          mysqld: { mode: 0o777 }

  memcached:
    setup:
    - !Alpine v3.5
    - !Install [memcached]

  adminer:
    setup:
    - !Alpine v3.5
    - !Install
      - php5-cli
      - php5-pdo_pgsql
    - !EnsureDir /opt/adminer
    - !Download
      url: https://www.adminer.org/static/download/4.2.5/adminer-4.2.5-mysql.php
      path: /opt/adminer/index.php
    - !Download
      url: https://raw.githubusercontent.com/vrana/adminer/master/designs/nette/adminer.css
      path: /opt/adminer/adminer.css

  exporter:
    setup:
    - !Ubuntu xenial
    - !UbuntuUniverse
    - !Install [php-mbstring, php-dom]
    - !Depends composer.json
    - !Depends composer.lock
    - !EnsureDir /usr/local/src/
    - !Copy
      source: /work
      path: /usr/local/src/work
    - !ComposerInstall
    - !Env
      COMPOSER_VENDOR_DIR: /usr/local/src/work/vendor
    - !Sh |
        cd /usr/local/src/work
        rm -f export.tar.gz
        composer install \
          --no-dev --prefer-dist --optimize-autoloader
    volumes:
      /usr/local/src/work: !Snapshot

commands:
  _mysql-init: !Command
    description: Init MySQL data volume
    container: mysql
    user-id: 200
    group-id: 200
    run: |
      set -ex
      ls -la $DB_DATA_DIR

      mysqld --initialize-insecure --datadir=$DB_DATA_DIR \
        --log-error=log

      mount
      ls -lad /run
      ls -la /run
      mysqld --datadir=$DB_DATA_DIR --skip-networking --log-error=log &

      while [ ! -S /run/mysqld/mysqld.sock ]; do sleep 0.2; done

      mysqladmin -u root create $DB_DATABASE
      mysql -u root -e "CREATE USER '$DB_USERNAME'@'localhost' IDENTIFIED BY '$DB_PASSWORD';"
      mysql -u root -e "GRANT ALL PRIVILEGES ON $DB_DATABASE.* TO '$DB_USERNAME'@'localhost';"
      mysql -u root -e "FLUSH PRIVILEGES;"

      mysqladmin -u root shutdown

  run: !Supervise
    description: run the laravel development server
    children:
      app: !Command
        container: laravel
        environ: *db_config
        run: &run_app |
            dsn="mysql:host=$DB_HOST;port=$DB_PORT"
            while ! php -r "new PDO('$dsn', '$DB_USERNAME', '$DB_PASSWORD');" 2> /dev/null; do
              echo 'waiting for database'
              sleep 1
            done
            php artisan cache:clear
            php artisan config:clear
            php artisan migrate
            php artisan db:seed
            php artisan serve

      db: &db_cmd !Command
        container: mysql
        user-id: 200
        group-id: 200
        run: |
          exec mysqld --datadir=$DB_DATA_DIR \
            --bind-address=$DB_HOST --port=$DB_PORT \
            --log-error=log --gdb
      adminer: &adminer_cmd !Command
        container: adminer
        run: php -S 127.0.0.1:8800 -t /opt/adminer

  run-cached: !Supervise
    description: Start the laravel development server alongside memcached
    children:
      cache: !Command
        container: memcached
        run: memcached -u memcached -vv
      app: !Command
        container: laravel
        environ:
          <<: *db_config
          CACHE_DRIVER: memcached
          MEMCACHED_HOST: 127.0.0.1
          MEMCACHED_PORT: 11211
        run: *run_app
      db: *db_cmd
      adminer: *adminer_cmd

  artisan: !Command
    description: Shortcut for running php artisan
    container: laravel
    run: [php, artisan]

  export: !Command
    container: exporter
    description: export project into tarball
    run: |
        cd /usr/local/src/work
        rm -f .env
        rm -f database/database.sqlite
        php artisan cache:clear
        php artisan config:clear
        php artisan route:clear
        php artisan view:clear
        rm storage/framework/sessions/*
        rm -rf tests
        echo APP_ENV=production >> .env
        echo APP_KEY=random >> .env
        php artisan key:generate
        php artisan optimize
        php artisan route:cache
        php artisan config:cache
        php artisan vendor:publish
        tar -czf export.tar.gz .env *
        cp -f export.tar.gz /work/

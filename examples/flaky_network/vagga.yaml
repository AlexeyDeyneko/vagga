containers:
  flask:
    setup:
    - !Ubuntu xenial
    - !PipConfig { dependencies: true }
    - !Py3Install [flask]

  nginx:
    setup:
    - !Ubuntu xenial
    - !Install [nginx]

  test:
    setup:
    - !Alpine v3.5
    - !Install [iptables]
    - !EnsureDir /vagga
    volumes:
      /vagga: !VaggaBin
    environ:
      PATH: /bin:/vagga:/sbin

  bench:
    setup:
    - !Alpine v3.5
    - !Repo edge/testing
    - !Install [wrk]

commands:

  run-normal: !Supervise
    description: Just run flask behind an nginx (http://172.23.255.2:8000)
    children:
      nginx: !Command
        container: nginx
        network:
          ip: 172.23.0.1
          ports: {8000: 8000}
        run: [nginx, -c, "/work/nginx.conf"]
      flask: !Command
        container: flask
        network:
          ip: 172.23.0.2
          ports: {5000: 5000}
        run: "python3 app.py"

  run-flaky: !Supervise
    description: |
      Just run flask behind nginx with network that doesn't work
      50% of the time (http://172.23.255.2:8000)
    children:
      nginx: !Command
        container: nginx
        network:
          ip: 172.23.0.1
          ports: {8000: 8000}
        run: [nginx, -c, "/work/nginx.conf"]
      flask: !Command
        container: flask
        network:
          ip: 172.23.0.2
          ports: {5000: 5000}
        run: "python3 app.py"
      interrupt: !BridgeCommand
        container: test
        run: |
          set -x
          while true; do
            vagga _network isolate flask
            sleep 1
            vagga _network fullmesh
            sleep 1
          done

  wrk: !Command
    description: Run wrk (should try against running server)
    container: bench
    run: [wrk]

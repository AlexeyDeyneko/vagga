containers:
  rails:
    setup:
    - !Alpine v3.3
    - !Install
      - libxml2
      - libxslt
      - zlib
      - sqlite-libs
      - libpq
      - nodejs
    - !BuildDeps
      - libxml2-dev
      - libxslt-dev
      - zlib-dev
      - sqlite-dev
      - postgresql-dev
    - !Env
      NOKOGIRI_USE_SYSTEM_LIBRARIES: 1
    - !GemBundle
    environ:
      HOME: /tmp
      DATABASE_URL: sqlite3:db/development.sqlite3

  memcached:
    setup:
    - !Alpine v3.3
    - !Install [memcached]

  postgres:
    setup:
    - !Ubuntu trusty
    - !Install [postgresql]
    - !EnsureDir /data
    # uncomment the line below to make postgres data persistent
    # - !EnsureDir /work/.db/data
    environ:
      PGDATA: /data
      PG_PORT: 5433
      PG_DB: test
      PG_USER: vagga
      PG_PASSWORD: vagga
      PG_BIN: /usr/lib/postgresql/9.3/bin
    volumes:
      /data: !Tmpfs
        size: 100M
        mode: 0o700
      # replace the volume above with the one below to make postgres data persistent
      # /data: !BindRW /work/.db/data

commands:
  run: !Command
    container: rails
    description: start rails development server
    run: rails server

  run-cached: !Supervise
    description: Start the rails development server alongside memcached
    children:
      cache: !Command
        container: memcached
        run: memcached -u memcached -vv
      app: !Command
        container: rails
        environ:
          CACHE_URL: memcached://127.0.0.1:11211
          RAILS_ENV: production
          SECRET_KEY_BASE: my_secret_key
        run: rails server

  run-postgres: !Supervise
    description: Start the rails development server using Postgres database
    children:
      app: !Command
        container: rails
        environ:
          DATABASE_URL: postgresql://vagga:vagga@127.0.0.1:5433/test
        run: |
            touch /work/.dbcreation # Create lock file
            while [ -f /work/.dbcreation ]; do sleep 0.2; done # Acquire lock
            rake db:migrate
            rails server
      db: !Command
        container: postgres
        run: |
            chown postgres:postgres $PGDATA;
            su postgres -c "$PG_BIN/pg_ctl initdb";
            su postgres -c "echo 'host all all all trust' >> $PGDATA/pg_hba.conf"
            su postgres -c "$PG_BIN/pg_ctl -w -o '-F --port=$PG_PORT -k /tmp' start";
            su postgres -c "$PG_BIN/psql -h 127.0.0.1 -p $PG_PORT -c \"CREATE USER $PG_USER WITH PASSWORD '$PG_PASSWORD';\""
            su postgres -c "$PG_BIN/createdb -h 127.0.0.1 -p $PG_PORT $PG_DB -O $PG_USER";
            rm /work/.dbcreation # Release lock
            sleep infinity
